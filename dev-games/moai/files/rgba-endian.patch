--- a/src/zl-util/ZLColor.cpp	2017-01-04 13:15:54.387864894 +0100
+++ b/src/zl-util/ZLColor.cpp	2017-01-04 13:18:41.896299391 +0100
@@ -5,6 +5,8 @@
 #include <zl-util/ZLColor.h>
 #include <zl-util/ZLInterpolate.h>
 
+#include <endian.h>
+
 #define WR 0.299f
 #define WG 0.587f
 #define WB 0.114f
@@ -390,19 +392,33 @@
 //----------------------------------------------------------------//
 u32 ZLColor::PackRGBA ( int r, int g, int b, int a ) {
 
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	return	( r << 0x00 ) +
 			( g << 0x08 ) +
 			( b << 0x10 ) +
 			( a << 0x18 );
+#else
+	return	( r << 0x18 ) +
+			( g << 0x10 ) +
+			( b << 0x08 ) +
+			( a << 0x00 );
+#endif
 }
 
 //----------------------------------------------------------------//
 u32 ZLColor::PackRGBA ( float r, float g, float b, float a ) {
 
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	return	(( u8 )( r * 255.0f ) << 0x00) +
 			(( u8 )( g * 255.0f ) << 0x08 ) +
 			(( u8 )( b * 255.0f ) << 0x10 ) +
 			(( u8 )( a * 255.0f ) << 0x18 );
+#else
+	return	(( u8 )( r * 255.0f ) << 0x18) +
+			(( u8 )( g * 255.0f ) << 0x10 ) +
+			(( u8 )( b * 255.0f ) << 0x08 ) +
+			(( u8 )( a * 255.0f ) << 0x00 );
+#endif
 }
 
 //----------------------------------------------------------------//
@@ -686,10 +702,17 @@
 //----------------------------------------------------------------//
 void ZLColorVec::SetRGBA ( u32 color ) {
 
+#if __BYTE_ORDER == __LITTLE_ENDIAN
 	this->mR = ( float )(( color ) & 0xff ) / 255.0f;
 	this->mG = ( float )(( color >> 8 ) & 0xff ) / 255.0f;
 	this->mB = ( float )(( color >> 16 ) & 0xff ) / 255.0f;
 	this->mA = ( float )(( color >> 24 ) & 0xff ) / 255.0f;
+#else
+	this->mR = ( float )(( color >> 24 ) & 0xff ) / 255.0f;
+	this->mG = ( float )(( color >> 16 ) & 0xff ) / 255.0f;
+	this->mB = ( float )(( color >> 8 ) & 0xff ) / 255.0f;
+	this->mA = ( float )(( color ) & 0xff ) / 255.0f;
+#endif
 }
 
 //----------------------------------------------------------------//

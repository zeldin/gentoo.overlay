commit 9cea5d678bb1ee559ec1e543bb265b4b52faeddd
Author: Frédéric Brière <fbriere@fbriere.net>
Date:   Sun Mar 8 21:40:46 2009 -0400

    Allow for edict entries over 512 bytes long

diff --git a/xjdfrontend.c b/xjdfrontend.c
index 92ec03d..5079bd2 100644
--- a/xjdfrontend.c
+++ b/xjdfrontend.c
@@ -1066,7 +1066,7 @@ int Vlookup()
 {
 
 	int xjresp,roff,rlen;
-	unsigned char repstr[512];
+	unsigned char repstr[MAX_ENTRY_SIZE];
 	long respos;
 	int hit,schix;
 	unsigned char khi,klo,cc,ops[4];
@@ -1255,7 +1255,7 @@ dictionary. It matches the full string, then progressively shortens it.
 	unsigned char vlast[11],temp[11],ops[80];
 	int vi,vok,prevch,KDNSflag,KDskip,KTest;
 	int xjresp,roff,rlen;
-	unsigned char repstr[512];
+	unsigned char repstr[MAX_ENTRY_SIZE];
 	unsigned long respos;
 
 	vlast[0] = 0;
diff --git a/xjdic.h b/xjdic.h
index 3e16b04..8feb997 100644
--- a/xjdic.h
+++ b/xjdic.h
@@ -19,6 +19,9 @@
 				  lookup (default 20)	*/
 #define MAXITER 40		/*maximum binary search iterations*/
 
+#define MAX_ENTRY_SIZE 4096	/* maximum size of an edict entry */
+				/* (this only applies to the stand-alone client) */
+
 /* The following is for Solarises   */
 
 #ifndef SEEK_END
diff --git a/xjdsa.c b/xjdsa.c
index 61acdd2..33313b6 100644
--- a/xjdsa.c
+++ b/xjdsa.c
@@ -186,7 +186,7 @@ void xjdserver (int type, int dic_no, long index_posn, int sch_str_len,
 	*dic_loc = schix;
 	for (i = 0; dbchar(schix+i) != 0x0a; i++)
 	{
-		if (i == 512)
+		if (i == MAX_ENTRY_SIZE)
 		{
 			printf ("Reply overrun\n");
 			exit(1);
diff --git a/xjdserver.c b/xjdserver.c
index 4e42e18..45be422 100644
--- a/xjdserver.c
+++ b/xjdserver.c
@@ -463,7 +463,7 @@ unsigned char **argv;
 		{
 			pdu_out.xjdrsp_resindex = htonl(schix);
 		}
-		for (i = 0; dbchar(schix+i) != 0x0a; i++)
+		for (i = 0; i < 510 && dbchar(schix+i) != 0x0a; i++)
 		{
 			pdu_out.xjdrsp_resstr[i] = dbchar(schix+i);
 		}
